
# Core ETL
loan_data = filter_and_merge_loan_tables(acctcommon, acctloan, loans)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
loan_data = append_total_exposure_field(loan_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
househldacct = drop_hh_duplicates(househldacct)
loan_data = append_household_number(loan_data, househldacct)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
household_grouping_df = household_total_exposure(loan_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
loan_data = append_household_exposure(loan_data, household_grouping_df)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
loan_data = filter_to_target_products(loan_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
acctstatistic_output = acctstatistichist_cleaning(acctstatistichist, acctcommon)
pd_df = count_pd(acctstatistic_output)
pd30_df = count_pd30(acctstatistic_output)
loan_data = append_pd_info(loan_data, pd_df, pd30_df)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
deposit_data = deposit_criteria_testing()
loan_data = append_deposit_data(loan_data, deposit_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
utilization_data, cleanup_data = line_utilization_fetch(db_handler, loan_data)
loan_data = append_line_utilization_data(loan_data, utilization_data, cleanup_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
inactive_date_df = get_inactive_date(acctloanlimithist)
loan_data = append_inactive_date(loan_data, inactive_date_df)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
loan_data = criteria_flags(loan_data)
assert loan_data['acctnbr'].duplicated().sum() == 0, "There are duplicate acctnbrs"
